#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Helal WYSIWYG editor.
# M.Hanny Sabbagh - 13/5/2013 <hannysabbagh@hotmail.com>.
# Ryan Paul (SegPhault) - 07/12/2009.


import gtk, webkit, os, subprocess

class ExampleEditor(gtk.Window):
  def __init__(self):
    gtk.Window.__init__(self)
    self.set_title("محرر هلال المرئي")
    self.connect("destroy", gtk.main_quit)
    self.set_position(gtk.WIN_POS_CENTER)
    self.resize(700, 700)
    self.filename = None
    self.set_icon_from_file('/usr/share/pixmaps/helal-wysiwyg-editor.png')
    self.editor = webkit.WebView()
    self.editor.set_editable(True)
    self.editor.open("file:///usr/share/helal-wysiwyg-editor/helal-wysiwyg-editor-ar.html")

    scroll = gtk.ScrolledWindow()
    scroll.add(self.editor)
    scroll.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

    self.ui = self.generate_ui()
    self.add_accel_group(self.ui.get_accel_group())
    self.toolbar1 = self.ui.get_widget("/toolbar_main")
    self.toolbar2 = self.ui.get_widget("/toolbar_format")
    self.menubar = self.ui.get_widget("/menubar_main")

    self.layout = gtk.VBox()
    self.layout.pack_start(self.menubar, False)
    self.layout.pack_start(self.toolbar1, False)
    self.layout.pack_start(self.toolbar2, False)
    self.layout.pack_start(scroll, True, True)
    self.add(self.layout)

  def generate_ui(self):
    ui_def = """
    <ui>
      <menubar name="menubar_main">
        <menu action="menuFile">
          <menuitem action="new" />
          <menuitem action="open" />
          <menuitem action="save" />

        <separator />
          <menuitem action="quit" />
        </menu>
        <menu action="menuEdit">
          <menuitem action="cut" />
          <menuitem action="copy" />
          <menuitem action="paste" />
        </menu>
        <menu action="menuInsert">
          <menuitem action="insertimage" />
        </menu>
        <menu action="menuFormat">
          <menuitem action="bold" />
          <menuitem action="italic" />
          <menuitem action="underline" />
          <menuitem action="strikethrough" />
          <separator />
          <menuitem action="font" />
          <menuitem action="color" />
          <separator />
          <menuitem action="justifyleft" />
          <menuitem action="justifyright" />
          <menuitem action="justifycenter" />
          <menuitem action="justifyfull" />
        </menu>
        <menu action="menuHelp">
          <menuitem action="about" />
   	  <menuitem action="website" />
        </menu>
      </menubar>
      <toolbar name="toolbar_main">
        <toolitem action="new" />
        <toolitem action="open" />
        <toolitem action="save" />
        <separator />
        <toolitem action="undo" />
        <toolitem action="redo" />
        <separator />
        <toolitem action="font" />
        <toolitem action="color" />
        <separator />
        <toolitem action="insertUnorderedList" />
        <toolitem action="insertOrderedList" />
        <separator />
        <toolitem action="fontSize1" />
        <toolitem action="fontSize2" />
        <toolitem action="fontSize3" />
        <toolitem action="fontSize4" />
        <toolitem action="fontSize5" />
        <toolitem action="fontSize6" />
        <separator />
      </toolbar>
      <toolbar name="toolbar_format">
	<toolitem action="removeFormat" />
        <separator />
        <toolitem action="bold" />
        <toolitem action="italic" />
        <toolitem action="underline" />
        <toolitem action="strikethrough" />
        <separator />
        <toolitem action="justifyleft" />
        <toolitem action="justifyright" />
        <toolitem action="justifycenter" />
        <toolitem action="justifyfull" />


        <separator />
        <toolitem action="insertimage" />
        <separator />
        <toolitem action="insertlink" />
        <toolitem action="unlink" />

      </toolbar>
    </ui>
    """

    actions = gtk.ActionGroup("Actions")
    actions.add_actions([
      ("menuFile", None, "_ملف"),
      ("menuEdit", None, "_تحرير"),
      ("menuInsert", None, "_إدراج"),
      ("menuFormat", None, "_التنسيق"),
      ("menuHelp", None, "_مساعدة"),

      ("new", gtk.STOCK_NEW, "_جديد", None, "جديد", self.on_new),
      ("open", gtk.STOCK_OPEN, "_افتح", None, "فتح", self.on_open),
      ("save", gtk.STOCK_SAVE, "_احفظ", None, "حفظ", self.on_save),
      ("quit", gtk.STOCK_SAVE, "_اخرج", None, "خروج", self.on_quit),

      ("undo", gtk.STOCK_UNDO, "_تراجع", None, "تراجع", self.on_action),
      ("redo", gtk.STOCK_REDO, "_تراجع عن التراجع", None, "تراجع عن التراجع", self.on_action),

      ("cut", gtk.STOCK_CUT, "_قص", None, "قص", self.on_action),
      ("copy", gtk.STOCK_COPY, "_نسخ", None, "نسخ", self.on_action),
      ("paste", gtk.STOCK_PASTE, "_لصق", None, "لصق", self.on_paste),
	
      ("about", gtk.STOCK_ABOUT, "_حول", None, "حول", self.on_about),
      ("website", gtk.STOCK_HOME, "_الموقع", None, "الموقع", self.on_website),

      ("bold", gtk.STOCK_BOLD, "_سميك", "<ctrl>B", "سميك", self.on_action),
      ("italic", gtk.STOCK_ITALIC, "_مائل", "<ctrl>I", "مائل", self.on_action),
      ("underline", gtk.STOCK_UNDERLINE, "_تحته خط", "<ctrl>U", "تحته خط", self.on_action),

      ("removeFormat", gtk.STOCK_CLEAR, "_إزالةالتنسيق", "<ctrl>R", "إزالة التنسيق", self.on_action),
      ("strikethrough", gtk.STOCK_STRIKETHROUGH, "_شخط", "<ctrl>T", "تشخيط", self.on_action),
      ("font", gtk.STOCK_SELECT_FONT, "اختر الخط", "<ctrl>F", "نوع الخط", self.on_select_font),
      ("color", gtk.STOCK_SELECT_COLOR, "اختر اللون", None, "لون النص", self.on_select_color),
      ("unlink", gtk.STOCK_DELETE, "_إزالة الرابط", None, "إزالة الرابط", self.on_unlink),

      ("insertUnorderedList", "قائمة نقطية", "_insertUnorderedList", None, "قائمة نقطية", self.on_insertUnorderedList),

      ("justifyleft", gtk.STOCK_JUSTIFY_LEFT, "يسار", None, "يسار", self.on_action),
      ("justifyright", gtk.STOCK_JUSTIFY_RIGHT, "يمين", None, "يمين", self.on_action),
      ("justifycenter", gtk.STOCK_JUSTIFY_CENTER, "وسط", None, "توسيط", self.on_action),
      ("justifyfull", gtk.STOCK_JUSTIFY_FILL, "بلا محاذاة", None, "بلا محاذاة", self.on_action),
      ("fontSize1", "insert-text1", "fontSize", None, "خط صغير جدًا", self.on_fontSize1),
      ("fontSize2", "insert-text2", "fontSize", None, "خط صغير", self.on_fontSize2),
      ("fontSize3", "insert-text3", "fontSize", None, "خط عادي", self.on_fontSize3),
      ("fontSize4", "insert-text4", "fontSize", None, "خط كبير", self.on_fontSize4),
      ("fontSize5", "insert-text5", "fontSize", None, "خط كبير جدًا", self.on_fontSize5),
      ("fontSize6", "insert-text5", "fontSize", None, "خط كبير جداً جدًا", self.on_fontSize6),

      ("insertimage", "insert-image", "Insert _Image", None, "إضافة صورة", self.on_insert_image),
      ("insertlink", "insert-link", "Insert _Link", None, "إضافة رابط", self.on_insert_link),

      ("insertOrderedList", "insertOrderedList", "_InsertOrderedList", None, "قائمة رقمية", self.on_insertOrderedList),
    ])

    actions.get_action("insertimage").set_property("icon-name", "insert-image")
    actions.get_action("insertlink").set_property("icon-name", "insert-link")
    actions.get_action("insertOrderedList").set_property("icon-name", "format_list_ordered")
    actions.get_action("insertUnorderedList").set_property("icon-name", "InsertUnorderedList")
    actions.get_action("fontSize1").set_property("icon-name", "1")
    actions.get_action("fontSize2").set_property("icon-name", "2")
    actions.get_action("fontSize3").set_property("icon-name", "3")
    actions.get_action("fontSize4").set_property("icon-name", "4")
    actions.get_action("fontSize5").set_property("icon-name", "5")
    actions.get_action("fontSize6").set_property("icon-name", "6")



    ui = gtk.UIManager()
    ui.insert_action_group(actions)
    ui.add_ui_from_string(ui_def)
    return ui

  def on_action(self, action):
    self.editor.execute_script(
      "document.execCommand('%s', false, false);" % action.get_name())
  def on_about(self, action):
		about = gtk.AboutDialog()
        	about.set_program_name("محرر هلال المرئي")
        	about.set_version("1.0.4")
        	about.set_license('''This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
MA 02110-1301, USA. ''')
		about.set_authors(["<hannysabbagh@hotmail.com> محمد هاني صباغ "])
        	about.set_comments(("محرر مرئي لهلال لينُكس."))
        	about.set_website("http://helallinux.com/")
        	about.set_logo(gtk.gdk.pixbuf_new_from_file("/usr/share/pixmaps/helal-wysiwyg-editor.png"))
		about.set_icon_from_file('/usr/share/pixmaps/helal-wysiwyg-editor.png')
        	about.run()
        	about.destroy()

  def on_website(self, action):
    os.system('sensible-browser http://helallinux.com')

  def on_paste(self, action):
    self.editor.paste_clipboard()

  def on_quit(self, action):
    self.window.destroy()

  def on_new(self, action):
    self.editor.open("file:///usr/share/helal-wysiwyg-editor/helal-wysiwyg-editor-ar.html")

  def on_insertUnorderedList(self, action):
      self.editor.execute_script("document.execCommand('insertUnorderedList', null, '%s');")

  def on_fontSize1(self, action):
      self.editor.execute_script("document.execCommand('fontSize', null, '1');")

  def on_fontSize2(self, action):
      self.editor.execute_script("document.execCommand('fontSize', null, '2');")

  def on_fontSize3(self, action):
      self.editor.execute_script("document.execCommand('fontSize', null, '3');")

  def on_fontSize4(self, action):
      self.editor.execute_script("document.execCommand('fontSize', null, '4');")

  def on_fontSize5(self, action):
      self.editor.execute_script("document.execCommand('fontSize', null, '5');")

  def on_fontSize6(self, action):
      self.editor.execute_script("document.execCommand('fontSize', null, '6');")


  def on_insertOrderedList(self, action):
      self.editor.execute_script("document.execCommand('insertOrderedList', null, '%s');")

  def on_select_font(self, action):
    dialog = gtk.FontSelectionDialog("اختر الخط:")
    if dialog.run() == gtk.RESPONSE_OK:
      fname, fsize = dialog.fontsel.get_family().get_name(), dialog.fontsel.get_size()
      self.editor.execute_script("document.execCommand('fontname', null, '%s');" % fname)
      self.editor.execute_script("document.execCommand('fontsize', null, '%s');" % fsize)
    dialog.destroy()

  def on_select_color(self, action):
    dialog = gtk.ColorSelectionDialog("اختر اللون:")
    if dialog.run() == gtk.RESPONSE_OK:
      gc = str(dialog.colorsel.get_current_color())
      color = "#" + "".join([gc[1:3], gc[5:7], gc[9:11]])
      self.editor.execute_script("document.execCommand('forecolor', null, '%s');" % color)
    dialog.destroy()

  def on_insert_link(self, action):
    dialog = gtk.Dialog("أدخل رابطًا:", self, 0,
      (gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OK, gtk.RESPONSE_OK))

    entry = gtk.Entry()
    dialog.vbox.pack_start(entry)
    dialog.show_all()

    if dialog.run() == gtk.RESPONSE_OK:
      self.editor.execute_script(
        "document.execCommand('createLink', true, '%s');" % entry.get_text())
    dialog.destroy()
  def on_unlink(self, action):
      self.editor.execute_script("document.execCommand('unlink', null, '%s');")

  def on_removeFormat(self, action):
      self.editor.execute_script("document.execCommand('removeFormat', null, '%s');")

  def on_insert_image(self, action):
    dialog = gtk.FileChooserDialog("اختر ملف صورة:", self, gtk.FILE_CHOOSER_ACTION_OPEN,
      (gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))

    if dialog.run() == gtk.RESPONSE_OK:
      fn = dialog.get_filename()
      if os.path.exists(fn):
        self.editor.execute_script(
          "document.execCommand('insertImage', null, '%s');" % fn)
    dialog.destroy()

  def on_open(self, action):
    dialog = gtk.FileChooserDialog("اختر ملف HTML:", self, gtk.FILE_CHOOSER_ACTION_OPEN,
      (gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_OPEN, gtk.RESPONSE_OK))

    if dialog.run() == gtk.RESPONSE_OK:
      fn = dialog.get_filename()
      if os.path.exists(fn):
        self.filename = fn
        with open(fn) as fd:
          self.editor.load_html_string(fd.read(), "file:///")
    dialog.destroy()

  def on_save(self, action):
      dialog = gtk.FileChooserDialog("اختر ملف HTML:", self, gtk.FILE_CHOOSER_ACTION_SAVE,
        (gtk.STOCK_CANCEL, gtk.RESPONSE_CANCEL, gtk.STOCK_SAVE, gtk.RESPONSE_OK))

      if dialog.run() == gtk.RESPONSE_OK:
        self.filename = dialog.get_filename()
        with open(self.filename, 'w+') as fd: fd.write(self.get_html())
      dialog.destroy()

  def get_html(self):
    self.editor.execute_script("document.title=document.documentElement.innerHTML;")
    return self.editor.get_main_frame().get_title()


e = ExampleEditor()
e.show_all()
gtk.main()
